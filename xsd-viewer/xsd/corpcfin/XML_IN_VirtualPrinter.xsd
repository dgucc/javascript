<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2007 rel. 3 sp1 (http://www.altova.com) by De Munter (Xerox Belux N.V.) -->
<!-- This file was provided externally from VirtualPrinter documentation when Calcisoc switched to VirtualPrinter V2.
However, the following changes have been made to this file for Calcisoc specific needs:
- Include schemas virtualprinter-v2-document_scriptura.xsd and Scriptura_CALCISOC.xsd.
- Specific inside DocumentContent refers to Specific from Sciptura_Calcisoc.xsd
- Comment Payment section at DocumentContent level because Calcisoc must only use the Payment section within Specific.
- Explicit declaration of DocumentContent instead of implicit one within DocumentScriptura.
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:include schemaLocation="virtualprinter-v2-document_scriptura.xsd"/>
	<xs:include schemaLocation="Scriptura_CALCISOC.xsd"/>
	<xs:simpleType name="Mandatory">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Optional">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="adminCode">
		<xs:restriction base="xs:string">
			<xs:pattern value="00[1-9]|01[0-4]|99"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="divisionNameOptional">
		<xs:restriction base="xs:string">
			<xs:maxLength value="35"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="boxCodeOptional">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{3}|[0-9]{4}|[0-9]{5}|[0-9]{6}|[0-9]{7}|[0-9]{8}|[0-9]{9}|[0-9]{10}|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="codeSA">
		<xs:restriction base="xs:string">
			<xs:pattern value="[01]|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="languageMandatory">
		<xs:restriction base="xs:string">
			<xs:pattern value="[1-4]"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="languageOptional">
		<xs:restriction base="xs:string">
			<xs:pattern value="[1-4]|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="genderCode">
		<xs:restriction base="xs:string">
			<xs:pattern value="[12]|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="genderCodeComplex">
		<xs:restriction base="xs:string">
			<xs:pattern value="[1-5]|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="civil">
		<xs:restriction base="xs:string">
			<xs:pattern value="[1-6]|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="nationalNumber">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d{11}|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="postCodeOptional">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{4}|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="date">
		<xs:union>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:length value="0"/>
				</xs:restriction>
			</xs:simpleType>
			<xs:simpleType>
				<xs:restriction base="xs:date"/>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="countryISO">
		<xs:restriction base="xs:string">
			<xs:pattern value="[a-zA-Z]{2}|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="phone">
		<xs:restriction base="xs:string">
			<xs:pattern value="0[1-9]\d{7}|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="amount">
		<xs:union>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:length value="0"/>
				</xs:restriction>
			</xs:simpleType>
			<xs:simpleType>
				<xs:restriction base="xs:decimal">
					<xs:fractionDigits value="2"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="structuredCommunication">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d{12}|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="respCode">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d{5}|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="appointmentCode">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d{5}|\d{10}|\s{0}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="person">
		<xs:sequence>
			<xs:element name="LastName" type="Optional"/>
			<xs:element name="FirstName" type="Optional"/>
			<xs:element name="NN" type="nationalNumber" minOccurs="0"/>
			<xs:element name="Gender" type="genderCode" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	<xs:element name="DocumentScriptura">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="DocumentScriptura">
					<xs:sequence>
						<xs:element ref="DocumentContent"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<!--TODO mdivanaa: remove explicit declaration when switch to VirtualPrinterWS (and change file doc)-->
	<xs:element name="DocumentContent">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Filenet" minOccurs="0"/>
				<xs:element name="Sender">
					<xs:complexType>
						<xs:all>
							<xs:element name="Admin" type="adminCode"/>
							<xs:element name="Code" type="xs:string" minOccurs="0"/>
							<xs:element name="Lang" type="languageOptional" minOccurs="0"/>
							<xs:element name="Division" type="divisionNameOptional" minOccurs="0"/>
							<xs:element name="Box" type="boxCodeOptional" minOccurs="0"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="Receiver">
					<xs:complexType>
						<xs:all>
							<xs:element name="Lang" type="languageMandatory"/>
							<xs:element name="CodeSA" type="codeSA" minOccurs="0"/>
							<xs:element name="Unique" type="Mandatory"/>
							<xs:element name="Name1" type="Optional" minOccurs="0"/>
							<xs:element name="Name2" type="Optional" minOccurs="0"/>
							<xs:element name="Name3" type="Optional" minOccurs="0"/>
							<xs:element name="Gender" type="genderCodeComplex" minOccurs="0"/>
							<xs:element name="Civil" type="civil" minOccurs="0"/>
							<xs:element name="Administrator" type="person" minOccurs="0"/>
							<xs:element name="Holder" type="person" minOccurs="0"/>
							<xs:element name="Spouse" type="person" minOccurs="0"/>
							<xs:element name="Address1" type="Optional" minOccurs="0"/>
							<xs:element name="Address2" type="Optional" minOccurs="0"/>
							<xs:element name="Post" type="postCodeOptional" minOccurs="0"/>
							<xs:element name="Town" type="Optional" minOccurs="0"/>
							<xs:element name="Country" type="xs:string" minOccurs="0"/>
							<xs:element name="CountryISO" type="countryISO" minOccurs="0"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="Introduction" minOccurs="0">
					<xs:complexType>
						<xs:all>
							<xs:element name="Ref1" type="xs:string" minOccurs="0"/>
							<xs:element name="Ref2" type="xs:string" minOccurs="0"/>
							<xs:element name="Ref3" type="xs:string" minOccurs="0"/>
							<xs:element name="Date" type="date" minOccurs="0"/>
							<xs:element name="Town" type="Optional" minOccurs="0"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<!--
				<xs:element name="Payment" minOccurs="0">
					<xs:complexType>
						<xs:all>
							<xs:element name="IBAN" type="Optional" minOccurs="0"/>
							<xs:element name="Bic" type="Optional" minOccurs="0"/>
							<xs:element name="Amount" type="amount" minOccurs="0"/>
							<xs:element name="Message1" type="xs:string" minOccurs="0"/>
							<xs:element name="Message2" type="xs:string" minOccurs="0"/>
							<xs:element name="Structured" type="structuredCommunication" minOccurs="0"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
				-->
				<xs:element name="ContactPerson" minOccurs="0">
					<xs:complexType>
						<xs:all>
							<xs:element name="Name" type="Optional" minOccurs="0"/>
							<xs:element name="FirstName" type="Optional" minOccurs="0"/>
							<xs:element name="Phone" type="phone" minOccurs="0"/>
							<xs:element name="RespCode" type="respCode" minOccurs="0"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="Appointment" minOccurs="0">
					<xs:complexType>
						<xs:all>
							<xs:element name="Office" type="Optional" minOccurs="0"/>
							<xs:element name="Phone" type="phone" minOccurs="0"/>
							<xs:element name="Code" type="appointmentCode" minOccurs="0"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element ref="Specific" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
